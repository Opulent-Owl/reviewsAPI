SET check_function_bodies = false;
CREATE SCHEMA [IF NOT EXISTS] reviews;

CREATE TABLE reviews(
  id SERIAL,
  product_id INT NOT NULL,
  creation_date timestamp without time zone NOT NULL,
  summary varchar(50) NOT NULL, //is title
  body varchar(4000) NOT NULL,
  recommended boolean DEFAULT false,
  rating smallint(5) NOT NULL,
  reported boolean DEFAULT false,
  helpfulness INT DEFAULT 0,
  reviwer_name varchar(100) NOT NULL,  //future: users_id
  reviewer_email varchar(200),
  response varchar(4000) DEFAULT NULL, // future: response_id
  PRIMARY KEY(id),
  CONSTRAINT product_reviews
    FOREIGN KEY (product_id)
      REFERENCES products (id)
);

CREATE TABLE review_photos(
  id SERIAL,
  review_id INT NOT NULL,
  url varchar(2000) DEFAULT NULL,
  CONSTRAINT reviews_photos
    FOREIGN KEY (review_id)
      REFERENCES reviews (id)
);

CREATE TABLE review_characteristics( //association table
  id SERIAL PRIMARY KEY,
  review_id INT NOT NULL,
  characteristic_id INT NOT NULL,
  score INT NOT NULL,
  CONSTRAINT reviews_characteristics
    FOREIGN KEY (review_id)
      REFERENCES reviews (id)
);

CREATE TABLE characteristics(
  id SERIAL PRIMARY KEY,
  review_id INT NOT NULL,
  characteristic_name ENUM ('size', 'comfort', 'quality', 'length', 'fit'),
  CONSTRAINT reviews_characteristics
    FOREIGN KEY (review_id)
      REFERENCES reviews (id)
);

// CREATE TABLE users( //future
  id SERIAL,
  username varchar(50) UNIQUE,
  email varchar(100) UNIQUE,
  PRIMARY KEY(id)
);

// CREATE TABLE responses( //future: also extra
  id SERIAL,
  body text NOT NULL,
  users_id INT,
  reviews_id INT,
  PRIMARY KEY(id),
  CONSTRAINT users_responses
    FOREIGN KEY (users_id)
      REFERENCES users (id),
  CONSTRAINT reviews_responses
    FOREIGN KEY (reviews_id)
      REFERENCES reviews (id)
);

CREATE TABLE products(
  id SERIAL,
  PRIMARY KEY(id)
);

